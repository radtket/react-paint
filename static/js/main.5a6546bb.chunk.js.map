{"version":3,"sources":["components/Canvas.jsx","components/Goo.jsx","components/Intro.jsx","components/BrushPreview.jsx","components/Toolbar.jsx","hooks/usePainter.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","_ref","canvasRef","width","WIDTH_HALF","cursor","_jsx","children","ref","style","Goo","position","top","left","version","xmlns","_jsxs","id","in","result","stdDeviation","mode","values","in2","Intro","init","isReady","className","classNames","hidden","onClick","type","href","rel","target","BrushPreview","currentColor","currentWidth","backgroundColor","height","Toolbar","dateUrl","handleClear","handleColor","handleDownload","handleEraserMode","handleRegularMode","handleSpecialMode","handleWidth","isAutoWidth","isEraser","isRegularMode","setAutoWidth","setCurrentLightness","setCurrentSaturation","disabled","onChange","FontAwesomeIcon","icon","faPaintBrush","faMagic","faEraser","htmlFor","faArrowsAltH","checked","title","defaultValue","max","min","download","usePainter","_canvas$current","autoWidth","useRef","canvas","direction","hue","isDrawing","isEraserMode","isRegularPaintMode","lastX","lastY","selectedColor","selectedLightness","selectedLineWidth","selectedSaturation","ctx","current","getContext","state","setState","useState","isNotMounted","isMounted","drawOnCanvas","useCallback","event","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","handleMouseDown","e","dynamicLineWidth","lineWidth","prev","drawNormal","copy","strokeStyle","globalCompositeOperation","stopDrawing","_canvas$current2","addEventListener","window","innerWidth","innerHeight","lineJoin","lineCap","clearRect","currentTarget","value","_ctx$current$lineWidt","_ctx$current","App","setDataUrl","api","toDataURL","_Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a6546bb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Canvas = ({ canvasRef, width }) => {\n  const WIDTH_HALF = width ? width / 2 : 0;\n  const cursor = `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23000000\" opacity=\"0.3\" height=\"${width}\" viewBox=\"0 0 ${width} ${width}\" width=\"${width}\"><circle cx=\"${WIDTH_HALF}\" cy=\"${WIDTH_HALF}\" r=\"${WIDTH_HALF}\" fill=\"%23000000\" /></svg>') ${WIDTH_HALF} ${WIDTH_HALF}, auto`;\n  return (\n    <section>\n      <canvas ref={canvasRef} style={{ cursor }} />\n    </section>\n  );\n};\nexport default Canvas;\n","import React from \"react\";\n\nconst Goo = () => {\n  return (\n    <svg\n      style={{ position: \"absolute\", top: \"-100%\", left: \"-100%\" }}\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\n          <feColorMatrix\n            in=\"blur\"\n            mode=\"matrix\"\n            result=\"goo\"\n            values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 21 -7\"\n          />\n          <feBlend in=\"SourceGraphic\" in2=\"goo\" result=\"mix\" />\n        </filter>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Goo;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Intro = ({ init, isReady }) => {\n  return (\n    <header className={classNames(\"intro\", { hidden: isReady })}>\n      <div className=\"intro__content\">\n        <h1>Magic Painter</h1>\n        <button className=\"blob-btn\" onClick={init} type=\"button\">\n          <span className=\"blob-text\">Start painting</span>\n          <span className=\"blob-btn__inner\">\n            <span className=\"blob-btn__blobs\">\n              <span className=\"blob-btn__blob\" />\n              <span className=\"blob-btn__blob\" />\n              <span className=\"blob-btn__blob\" />\n              <span className=\"blob-btn__blob\" />\n            </span>\n          </span>\n        </button>\n        <p>\n          Created by <strong>Adrian Bece</strong>\n        </p>\n        <p>\n          <a\n            href=\"https://codeadrian.hashnode.dev/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Hashnode\n          </a>{\" \"}\n          |\n          <a\n            href=\"https://twitter.com/AdrianBeceDev\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Twitter\n          </a>{\" \"}\n          |\n          <a\n            href=\"https://www.buymeacoffee.com/ubnZ8GgDJ\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Support my work\n          </a>\n          |\n          <a\n            href=\"https://codeadrian.github.io\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Personal website\n          </a>\n        </p>\n      </div>\n    </header>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\n\nconst BrushPreview = ({ currentColor, currentWidth }) => {\n  return (\n    <div className=\"tool-section tool-section--lrg\">\n      <small>\n        <strong>Brush Preview</strong>\n      </small>\n      <div className=\"preview\">\n        <div\n          className=\"preview__brush\"\n          style={{\n            backgroundColor: currentColor,\n            width: `${currentWidth}px`,\n            height: `${currentWidth}px`,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BrushPreview;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  faArrowsAltH,\n  faEraser,\n  faMagic,\n  faPaintBrush,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BrushPreview from \"./BrushPreview\";\n\nconst Toolbar = ({\n  currentColor,\n  currentWidth,\n  dateUrl,\n  handleClear,\n  handleColor,\n  handleDownload,\n  handleEraserMode,\n  handleRegularMode,\n  handleSpecialMode,\n  handleWidth,\n  isAutoWidth,\n  isEraser,\n  isRegularMode,\n  setAutoWidth,\n  setCurrentLightness,\n  setCurrentSaturation,\n}) => {\n  return (\n    <aside>\n      <div>\n        <BrushPreview currentColor={currentColor} currentWidth={currentWidth} />\n        <div className=\"tool-section tool-section--lrg\">\n          <div className=\"tool-section\">\n            <small>\n              <strong>Brush color</strong>\n            </small>\n          </div>\n          <input\n            className=\"btn--color\"\n            disabled={!isRegularMode}\n            id=\"toolColorPicker\"\n            onChange={handleColor}\n            type=\"color\"\n          />\n        </div>\n        <div className=\"tool-section\">\n          <small>\n            <strong>Tools</strong>\n          </small>\n        </div>\n        <div className=\"tool-grid tool-section tool-section--lrg\">\n          <div>\n            <button\n              className={classNames(\"btn\", \"btn--tool\", {\n                \"btn--active\": isRegularMode && !isEraser,\n              })}\n              onClick={handleRegularMode}\n              type=\"button\"\n            >\n              <FontAwesomeIcon icon={faPaintBrush} />\n            </button>\n          </div>\n          <div>\n            <button\n              className={classNames(\"btn\", \"btn--tool\", {\n                \"btn--dream-active\": !isRegularMode,\n              })}\n              onClick={handleSpecialMode}\n              type=\"button\"\n            >\n              <FontAwesomeIcon icon={faMagic} />\n            </button>\n          </div>\n          <div>\n            <button\n              className={classNames(\"btn\", \"btn--tool\", {\n                \"btn--eraser-active\": isEraser,\n              })}\n              onClick={handleEraserMode}\n              type=\"button\"\n            >\n              <FontAwesomeIcon icon={faEraser} />\n            </button>\n          </div>\n          <div>\n            <label\n              className={classNames(\"btn\", \"btn--tool\", {\n                \"btn--width-active\": isAutoWidth,\n              })}\n              htmlFor=\"tool-autowidth\"\n            >\n              <FontAwesomeIcon icon={faArrowsAltH} />\n              <input\n                checked={isAutoWidth}\n                disabled={isEraser}\n                id=\"tool-autowidth\"\n                onChange={setAutoWidth}\n                title=\"Dynamic brush size\"\n                type=\"checkbox\"\n              />\n            </label>\n          </div>\n        </div>\n        {!isAutoWidth && (\n          <div className=\"tool-section tool-section--lrg\">\n            <div className=\"tool-section\">\n              <small>\n                <strong>Brush size</strong>\n              </small>\n            </div>\n            <div className=\"tool-section\">\n              <input\n                defaultValue=\"50\"\n                max=\"90\"\n                min=\"10\"\n                onChange={handleWidth}\n                type=\"range\"\n              />\n            </div>\n          </div>\n        )}\n        {!isRegularMode && (\n          <div className=\"tool-section tool-section--lrg\">\n            <div className=\"tool-section\">\n              <small>\n                <strong>Magic brush</strong>\n              </small>\n            </div>\n            <div className=\"tool-section\">\n              <label htmlFor=\"Saturation\">\n                <small>Saturation</small>\n                <input\n                  defaultValue=\"100\"\n                  id=\"Saturation\"\n                  max=\"100\"\n                  min=\"0\"\n                  onChange={setCurrentSaturation}\n                  type=\"range\"\n                />\n              </label>\n            </div>\n\n            <label htmlFor=\"Lightness\">\n              Lightness\n              <input\n                defaultValue=\"50\"\n                id=\"Lightness\"\n                max=\"100\"\n                min=\"0\"\n                onChange={setCurrentLightness}\n                type=\"range\"\n              />\n            </label>\n          </div>\n        )}\n      </div>\n      <div>\n        <a\n          className=\"btn btn--main btn--block\"\n          download=\"image.png\"\n          href={dateUrl}\n          onClick={handleDownload}\n        >\n          Save Image\n        </a>\n        <button className=\"btn btn--block\" onClick={handleClear} type=\"button\">\n          Clear\n        </button>\n      </div>\n    </aside>\n  );\n};\n\nexport default Toolbar;\n","import { useCallback, useRef, useState } from \"react\";\n\nconst usePainter = () => {\n  const autoWidth = useRef(false);\n  const canvas = useRef();\n  const direction = useRef(true);\n  const hue = useRef(0);\n  const isDrawing = useRef(false);\n  const isEraserMode = useRef(false);\n  const isRegularPaintMode = useRef(true);\n  const lastX = useRef(0);\n  const lastY = useRef(0);\n  const selectedColor = useRef(\"#000000\");\n  const selectedLightness = useRef(50);\n  const selectedLineWidth = useRef(50);\n  const selectedSaturation = useRef(100);\n  const ctx = useRef(canvas?.current?.getContext(\"2d\"));\n\n  // State\n  const [state, setState] = useState({\n    currentColor: \"#000000\",\n    currentWidth: 50,\n    isAutoWidth: false,\n    isEraser: false,\n    isReady: false,\n    isRegularMode: true,\n  });\n\n  const isNotMounted = ref => {\n    return !ref || !ref.current;\n  };\n\n  const isMounted = ref => {\n    return ref && ref.current;\n  };\n\n  const drawOnCanvas = useCallback(event => {\n    if (isNotMounted(ctx)) {\n      return;\n    }\n    ctx.current.beginPath();\n    ctx.current.moveTo(lastX.current, lastY.current);\n    ctx.current.lineTo(event.offsetX, event.offsetY);\n    ctx.current.stroke();\n    [lastX.current, lastY.current] = [event.offsetX, event.offsetY];\n  }, []);\n\n  const handleMouseDown = useCallback(e => {\n    isDrawing.current = true;\n    [lastX.current, lastY.current] = [e.offsetX, e.offsetY];\n  }, []);\n\n  const dynamicLineWidth = useCallback(() => {\n    if (isNotMounted(ctx)) {\n      return;\n    }\n    if (ctx.current.lineWidth > 90 || ctx.current.lineWidth < 10) {\n      direction.current = !direction.current;\n    }\n\n    direction.current ? ctx.current.lineWidth++ : ctx.current.lineWidth--;\n\n    setState(prev => {\n      return {\n        ...prev,\n        currentWidth: ctx.current.lineWidth,\n      };\n    });\n  }, []);\n\n  const drawNormal = useCallback(\n    e => {\n      if (isNotMounted(isDrawing) || isNotMounted(ctx)) {\n        return;\n      }\n\n      setState(prev => {\n        const copy = { ...prev };\n        if (isMounted(isRegularPaintMode) || isMounted(isEraserMode)) {\n          ctx.current.strokeStyle = selectedColor.current;\n          copy.currentColor = selectedColor.current;\n          autoWidth.current && !isEraserMode.current\n            ? dynamicLineWidth()\n            : (ctx.current.lineWidth = selectedLineWidth.current);\n          isEraserMode.current\n            ? (ctx.current.globalCompositeOperation = \"destination-out\")\n            : (ctx.current.globalCompositeOperation = \"source-over\");\n        } else {\n          copy.currentColor = `hsl(${hue.current},${selectedSaturation.current}%,${selectedLightness.current}%)`;\n          ctx.current.strokeStyle = `hsl(${hue.current},${selectedSaturation.current}%,${selectedLightness.current}%)`;\n          ctx.current.globalCompositeOperation = \"source-over\";\n\n          hue.current++;\n          if (hue.current >= 360) hue.current = 0;\n          autoWidth.current\n            ? dynamicLineWidth()\n            : (ctx.current.lineWidth = selectedLineWidth.current);\n        }\n\n        return copy;\n      });\n\n      drawOnCanvas(e);\n    },\n    [drawOnCanvas, dynamicLineWidth]\n  );\n\n  const stopDrawing = useCallback(() => {\n    isDrawing.current = false;\n  }, []);\n\n  const init = useCallback(() => {\n    ctx.current = canvas?.current?.getContext(\"2d\");\n    if (isMounted(canvas) && isMounted(ctx)) {\n      canvas.current.addEventListener(\"mousedown\", handleMouseDown);\n      canvas.current.addEventListener(\"mousemove\", drawNormal);\n      canvas.current.addEventListener(\"mouseup\", stopDrawing);\n      canvas.current.addEventListener(\"mouseout\", stopDrawing);\n      canvas.current.width = window.innerWidth - 196;\n      canvas.current.height = window.innerHeight;\n      ctx.current.strokeStyle = \"#000\";\n      ctx.current.lineJoin = \"round\";\n      ctx.current.lineCap = \"round\";\n      ctx.current.lineWidth = 10;\n\n      setState(prev => {\n        return {\n          ...prev,\n          isReady: true,\n        };\n      });\n    }\n  }, [drawNormal, handleMouseDown, stopDrawing]);\n\n  const handleRegularMode = useCallback(() => {\n    setState(prev => {\n      const copy = { ...prev };\n      copy.isRegularMode = true;\n      isEraserMode.current = false;\n      copy.isEraser = false;\n      isRegularPaintMode.current = true;\n      return copy;\n    });\n  }, []);\n\n  const handleSpecialMode = useCallback(() => {\n    setState(prev => {\n      const copy = { ...prev };\n      copy.isRegularMode = false;\n      isEraserMode.current = false;\n      copy.isEraser = false;\n      isRegularPaintMode.current = false;\n      return copy;\n    });\n  }, []);\n\n  const handleColor = e => {\n    setState(prev => {\n      const copy = { ...prev };\n      selectedColor.current = e.currentTarget.value;\n      copy.currentColor = e.currentTarget.value;\n\n      return copy;\n    });\n  };\n\n  const handleWidth = e => {\n    setState(prev => {\n      const copy = { ...prev };\n      selectedLineWidth.current = e.currentTarget.value;\n      copy.currentWidth = e.currentTarget.value;\n\n      return copy;\n    });\n  };\n\n  const handleClear = useCallback(() => {\n    if (isNotMounted(ctx) || isNotMounted(canvas)) {\n      return;\n    }\n    ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height);\n  }, []);\n\n  const handleEraserMode = () => {\n    setState(prev => {\n      const copy = { ...prev };\n      autoWidth.current = false;\n      copy.isAutoWidth = false;\n      copy.isRegularMode = true;\n      copy.isEraser = true;\n      isEraserMode.current = true;\n\n      return copy;\n    });\n  };\n\n  const setCurrentSaturation = e => {\n    setState(prev => {\n      const copy = { ...prev };\n      selectedSaturation.current = e.currentTarget.value;\n      copy.currentColor = `hsl(${hue.current},${e.currentTarget.value}%,${selectedLightness.current}%)`;\n\n      return copy;\n    });\n  };\n\n  const setCurrentLightness = e => {\n    setState(prev => {\n      const copy = { ...prev };\n      selectedLightness.current = e.currentTarget.value;\n      copy.currentColor = `hsl(${hue.current},${selectedSaturation.current}%,${e.currentTarget.value}%)`;\n\n      return copy;\n    });\n  };\n\n  const setAutoWidth = e => {\n    setState(prev => {\n      const copy = { ...prev };\n      autoWidth.current = e.currentTarget.checked;\n      copy.isAutoWidth = e.currentTarget.checked;\n      copy.currentWidth = !e.currentTarget.checked\n        ? selectedLineWidth.current\n        : ctx?.current?.lineWidth ?? selectedLineWidth.current;\n      return copy;\n    });\n  };\n\n  return [\n    {\n      canvas,\n      ...state,\n    },\n    {\n      handleClear,\n      handleColor,\n      handleEraserMode,\n      handleRegularMode,\n      handleSpecialMode,\n      handleWidth,\n      init,\n      setAutoWidth,\n      setCurrentLightness,\n      setCurrentSaturation,\n    },\n  ];\n};\n\nexport default usePainter;\n","import React, { useState, useCallback } from \"react\";\nimport Canvas from \"./components/Canvas\";\nimport Goo from \"./components/Goo\";\nimport Intro from \"./components/Intro\";\nimport Toolbar from \"./components/Toolbar\";\nimport usePainter from \"./hooks/usePainter\";\n\nconst App = () => {\n  const [dateUrl, setDataUrl] = useState(\"#\");\n  const [{ canvas, isReady, ...state }, { init, ...api }] = usePainter();\n\n  const handleDownload = useCallback(() => {\n    if (!canvas || !canvas.current) {\n      return;\n    }\n    setDataUrl(canvas.current.toDataURL(\"image/png\"));\n  }, [canvas]);\n\n  return (\n    <>\n      <Intro init={init} isReady={isReady} />\n      <Toolbar {...{ ...state, ...api, dateUrl, handleDownload }} />\n      <Canvas canvasRef={canvas} width={state.currentWidth} />\n      <Goo />\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"normalize.css\";\nimport \"./style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}